Design a contained, scroll-driven component that highlights the full functionality of our cybersecurity dashboard in a visually compelling, animated walkthrough. This component must blend seamlessly into the existing website layout without disrupting page flow, navigation, or scroll behavior before and after its appearance.

📍 Placement:
Insert this component:

Below the “Trusted by Industry Leaders” section

Above the “What Security Leaders Say” testimonials

🎯 Functional Behavior:
🔄 Scroll-Locked Section
When this section enters the viewport, the main page scrolling is temporarily disabled.

Inside this section, user can scroll within the component only (internally scrollable container).

Once the user finishes scrolling through all internal feature slides, normal page scroll resumes.

📜 Scroll Experience:
The scroll should feel fluid and narrative-driven, like a guided product tour.

Each feature is presented as a step (slide) within the container:

Left Panel (Text):

Animates from top to center

Text is minimal, with staggered line animation using GSAP.fromTo()

Right Panel (Visual):

Animates from bottom to center

Show real GUI screenshots, subtle GIFs, or SVG-based animations

🧩 Design Specifications:
✨ Style & Theme:
Inherit and reflect dashboard theme:

Dark mode base

Accent colors: blue and green (use subtle glows, gradients, or borders)

Rounded cards, soft shadows, and elegant borders

Use minimal, futuristic typography:

Small font sizes for clean UI

Maintain high readability, especially on left-panel text

🖼️ Layout:
Two-column layout inside the container:

Left: Text content (scroll-triggered animation)

Right: Corresponding visual or animation

Smooth transitions and fading between each step

Responsive on both desktop and tablet

🧠 GSAP Animation Specs:
Use GSAP ScrollTrigger with pin: true to lock section and control scroll

Each feature step uses timeline:

js
Copy
Edit
gsap.fromTo(".feature-text", { y: -50, opacity: 0 }, { y: 0, opacity: 1, duration: 0.8 });
gsap.fromTo(".feature-visual", { y: 50, opacity: 0 }, { y: 0, opacity: 1, duration: 0.8 });
ScrollTrigger controls the scroll within this container only

Resume page scroll once last feature step completes (use onLeave or onComplete callback)

🖥️ Scroll Steps (Inspired by Live Dashboard Functionality):
🔍 Unified Threat Overview
Text: “Get complete visibility into threat landscape — by severity, source, and impact.”

Visual: Dashboard screen showing real-time threat widgets, filters, and top alerts.

⚠️ Alert Triage Engine
Text: “Classify alerts automatically using AI-powered scoring for TP, FP, and escalation.”

Visual: Risk color-coded table with confidence scores and mitigation status.

📈 Tactical Analytics
Text: “Track attacker behavior, analyze file paths, and correlate process execution.”

Visual: Graph-based attack flows or timeline view of process trees.

⚙️ Automated Playbooks
Text: “Isolate devices, block hashes, and notify teams instantly with playbooks.”

Visual: Workflow builder or execution trace from alert to resolution.

🧑‍💼 User Entity Mapping
Text: “Correlate alerts back to users, domains, and asset movement.”

Visual: Identity dashboard with session logs and geo-location mapping.

📄 Compliance Reporting
Text: “Generate audit-ready reports mapped to ISO, NIST, SOC2 and more.”

Visual: Report builder UI with downloadable templates and compliance score.

🛠️ Developer Notes:
Lock page scroll on section enter using GSAP:

js
Copy
Edit
ScrollTrigger.create({
  trigger: ".dashboard-showcase",
  start: "top top",
  end: "bottom bottom",
  pin: true,
  scrub: 1,
  onEnter: () => disablePageScroll(),
  onLeave: () => enablePageScroll(),
});
Use CSS overflow: hidden or JavaScript scroll-lock for the main body during component active state.

Ensure lazy loading of images/visuals to optimize performance.

Handle responsive breakpoints and fallbacks for devices without scroll precision.